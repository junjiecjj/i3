


# i3 config file (v4)

# 设置win键为mod键,解析时直接替换文件中的变量。变量扩展不是递归的，因此不可能使用包含另一个变量的值来定义变量。 没有花哨的处理，也绝对没有改变这一点的计划。
set $mod Mod4
set $mod1 Mod1
set $up k
set $down j
set $left h
set $right l
# set $right semicolon
# Use Mouse+$mod to drag a floating window,以 floating_modifier 开头的是浮动模式移动组合键，设置之后可以按下这个键和鼠标进行拖动浮动模式的窗口。
# 你可以按住Mod1,同时鼠标左键点击拖动动窗口到你想要的方位。
# 当你按住浮动调节器时（Mod1）,你可以通过按住鼠标右键并拖动，来调整那一个窗口的大小。
# 如果你同时按住了Shift键，窗口将会按比例缩放（宽高比会保留）。
floating_modifier $mod


#以 floating_minimum_size 或 floating_maximum_size 开头的是浮动窗口最小或最大尺寸，设置成 -1 时，不约束，设置成 0 或不设置则使用默认值。
floating_maximum_size -1 x -1
floating_minimum_size 75 x 50
#font pango:monospace 8
font pango:CaskaydiaCove Nerd Font Mono 10


#===================================================================================
# =================== 设置一些需要自启的软件，下面是我的示例
#   启动不支持启动提醒的脚本或程序时，鼠标指针会逗留在忙碌状态，为排除此现象，可用`--no-startup-id`指令。
# exec XXX	# i3在初始化时执行的命令或脚本,重启i3时，exec不会执行
# exec_always XXX # 重启i3时执行的命令或脚本
#===================================================================================

# tray icons(eDP1 is the display device's name, use the command "xrandr" to see the display device name.)
# 其中的eDP1便是我的显示设备名称。如果你的显示设备名称不是eDP1 ，那么需要修改
exec --no-startup-id xrandr --output eDP-1 --primary

# 如果为笔记本外接两个显示器，关闭笔记本的显示器
# exec --no-startup-id xrandr --output DP-1-8 --mode 1920x1080 --primary
# exec --no-startup-id  xrandr --output DP-1-9 --mode 1920x1080  --right-of DP-1-8  --auto
# exec --no-startup-id xrandr  --output eDP-1 --off


# 如果为笔记本外接1个显示器
# exec --no-startup-id xrandr --output eDP-1 --mode 1920x1080 --primary
#exec --no-startup-id xrandr --output HDMI1 1920*1080 --right-of eDP1



# 如果为台式机外接2个显示器
# exec --no-startup-id xrandr --output HDM-1 --mode 1920x1080 --primary
# exec --no-startup-id xrandr --output HDMI-2  1920*1080 --right-of HDM-1

# $i3-background
exec_always --no-startup-id xsetroot -solid '#005577'

#以 exec 和 exec_always 开头的是设置自动启动程序，exec_always 会在重启 i3 时跟着重启。
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# 把 nm-applet 开起来，用于显示网络托盘图标，需要安装 gnome-extra/nm-applet
exec --no-startup-id nm-applet  &

# 锁屏工具
exec --no-startup-id xscreensaver -no-splash &


# exec --no-startup-id conky -c ~/.conkyrc

# 在每次注销或者刷新i3wm时自动执行nitrogen并刷新壁纸
exec_always nitrogen --restore; sleep 2
#variety设置壁纸时候，普通用户必须有权限
exec  --no-startup-id nohup  variety   >  /dev/null  2>&1 &



# 护眼工具
# exec --no-startup-id redshift
exec --no-startup-id  redshift-gtk &

#===autostart parograms只可以同时启用其中一种===
exec_always --no-startup-id    picom --experimental-backends -b
# exec --no-startup-id  compton -cCGfF -o 0.38 -O 200 -I 200 -t 0 -l 0 -r 3 -D2 -m 0.88

#登录时 启用窗口透明
# exec --no-startup-id compton  -b

# exec_always --no-startup-id  xcompmgr -c -C -t-5 -l-5 -r4.2 -o.55 &

#登陆时 随机选择壁纸 ，~/Pictures/DesktopBackground 下要放几张图片
exec_always --no-startup-id feh --recursive --randomize --bg-fill /home/jack/图片/Wallpapers/

# 登陆时 随机选择壁纸,并每隔一段时间就更改壁纸 ，~/Pictures/DesktopBackground 下要放几张图片
# exec --no-startup-id bash  ~/.config/i3/i3script/wallpaper.sh &

# 火焰截图
exec --no-startup-id nohup flameshot >/dev/null 2>&1  &

# 桌面通知
exec --no-startup-id dunst &

# 剪切板管理器
exec --no-startup-id copyq &

# 开启小键盘
exec_always --no-startup-id numlockx on # 开启小键盘yq &

# 无论何时都执行
# exec_always --no-startup-id fcitx
# 启动i3时执行,重启i3时不执行
exec --no-startup-id fcitx  &
# exec --no-startup-id fcitx-sogoupingyin
# fcitx5 输入法
# exec --no-startup-id fcitx5 &

#音频相关的托盘
# 系统托盘图标：pasystray
exec  --no-startup-id  nohup   pasystray     >  /dev/null  2>&1 &
# KMix — KDE 音量控制应用程序支持多个平台，包括 PulseAudio、可配置的系统托盘小程序。
exec --no-startup-id   nohup   kmix     >  /dev/null  2>&1 &
# pa-applet — 带有音量条的 PulseAudio 系统托盘小程序。
exec --no-startup-id   nohup   /foo/bar/bin/pa-applet       >  /dev/null  2>&1 &
#轻量级系统托盘应用程序，可让您使用 PulseAudio 控制麦克风状态和音量,上下滚轮调节输入音大小。
exec --no-startup-id   nohup   mictray       >  /dev/null  2>&1 &


# 登陆时启动polybar,与bar{}别同时使用
# exec_always --no-startup-id $HOME/.config/polybar/launch.sh

exec --no-startup-id xautolock -time 5 -locker '/usr/bin/betterlockscreen -l' -corners ---- -cornersize 30 &
exec --no-startup-id betterlockscreen -w dim
exec --no-startup-id source ~/.fehbg


#或者以上都取消，设置自动启动脚本
# exec  bash  ./i3script/autostart.sh

# 下面的例子是一个有VGA和HDMI输出的笔记本使用一个菜单来切换显示输出的开关：
## Manual management of external displays
# Set the shortcuts and what they do
set $mode_display Ext Screen (v) VGA ON, (h) HDMI ON, (x) VGA OFF, (y) HDMI OFF
mode "$mode_display" {
    bindsym v exec --no-startup-id xrandr --output VGA1 --auto --right-of eDP-1, mode "default"
    bindsym h exec --no-startup-id xrandr --output HDMI1 --auto --right-of eDP-1, mode "default"
    bindsym f exec --no-startup-id  xrandr --output DP-1-8 --primary --auto --output eDP-1 --off  --output DP-1-9  --right-of DP-1-8 --auto, mode "default"
    bindsym x exec --no-startup-id xrandr --output VGA1 --auto --off, mode "default"
    bindsym y exec --no-startup-id xrandr --output HDMI1 --auto --off, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# Declare here the shortcut to bring the display selection menu
bindsym $mod+Control+d mode "$mode_display"

#===================================================================================
# =================== 设置一些需要自启的软件over
#===================================================================================




#======================================================================================================
### 边框，窗口间距，  ###
#======================================================================================================

# 这个选项决定了新窗口的边框样式。 默认值是 normal。 default_floating_border 仅对于新创建的浮动窗口有效（例如某些对话框）， 而不对那些创建时不是浮动窗口，而在之后才被调整为浮动的窗口有效。
# 如果被设置为 pixel，新窗口将会保留边框，而不显示标题栏。 如果被设置为 normal，新窗口将同时具有边框和标题栏。 同时，你还可以指定边框的宽度。

# 格式：
# default_border normal|none|pixel
# default_border normal|pixel <边框宽度>
# default_floating_border normal|none|pixel
# default_floating_border normal|pixel <边框宽度>
# 请注意，new_window 和 new_float 已经被弃用，他们将在未来的更新中被移除。 我们强烈建议你使用新的选项。

new_window pixel  3
new_float  pixel  3

# 设置新的窗口的边界宽度，效果是不显示窗口的title。
default_border pixel  3

# 新的浮动窗口的边界宽度，同上。
default_floating_border pixel 3

# 你可以使用hide_edge_borders来隐藏与屏幕边缘靠近的边框。如果你使用滚动条的话这很有用，或者不想浪费甚至两像素的显示空间。
#  "smart"选项是在工作区内只有一个可见窗口时才隐藏边框，而在工作去内有多个窗口，他不会隐藏边框。
# 语法
# hide_edge_borders none|vertical|horizontal|both|smart
#以 hide_edge_borders 开头的是设置是否隐藏相接的两个窗口之间的边框。hide_edge_borders none|vertical|horizontal|both
hide_edge_borders smart_no_gaps
# hide_edge_borders smart

# 如果一个窗口被激活，例如，通过 google-chrome www.google.com，它可能会请求获得焦点。 这可能不是优选的，你可以配置不同的反应。
# 请注意，这可能不会影响正在打开的窗口。要防止新窗口被聚焦，请参阅 no_focus。
# 语法： focus_on_window_activation smart|urgent|focus|none
# 不同模式的作用如下：
# smart 这是默认行为。如果请求焦点的窗口位于活动工作区上，它将获得焦点。否则，将设置紧急提示。
# urgent 窗口将始终标记为紧急，但焦点不会被窃取。
# focus 该窗口将始终处于焦点状态，不会被标记为紧急。
# none 该窗口既不会被聚焦，也不会被标记为紧急。
focus_on_window_activation smart

# 给焦点窗口一个前缀
bindsym $mod+p title_format "重要 | %title"


# change border style
# 既不使用窗口标题也不使用边框
bindsym $mod+Mod1+u border none
# 使用窗口标题，有边框2
bindsym $mod+Mod1+n border normal 2
# 不使用窗口标题和粗边框
bindsym $mod+Mod1+o border pixel 8
bindsym $mod+Mod1+b border toggle


# popups
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# float programs(find the programs'names in "/usr/share/applictions")
for_window [class="Xfce4-terminal"] floating enable
for_window [class="Gpicview"] floating enable
for_window [class="mpv"] floating enable
for_window [class="Gimp"] floating enable
for_window [class="Xarchiver"] floating enable
for_window [class="Genymotion"] floating enable
for_window [class="Vlc"] floating enable
for_window [class="VirtualBox"] floating enable

for_window [class="shadowsocks-qt5"] floating enable
for_window [class="Catfish"] floating enable
for_window [class="Xfce4-appfinder"] floating enable
for_window [class="google-chrome-stable"] floating enable
for_window [class="google-chrome"] floating enable
for_window [class="typora"] floating enable
for_window [class="Thunar"]  sticky enable border normal
for_window [class="nautilus"] floating enable sticky enable border normal
for_window [class="spyder"] floating enable   sticky enable
for_window [class="netease-cloud-music"] floating enable


for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="(?i)virtualbox"] floating enable normal
for_window [class="TelegramDesktop"] floating enable normal
for_window [class="Lxappearance"] floating enable sticky normal
for_window [class="obs"] floating enable sticky normal
for_window [class="Gvim"] floating enable sticky normal
for_window [class="netease-cloud-music"] floating enable sticky normal


# 如果你想杀死所有 class 是 Firefox 的窗口，使用：
# bindsym $mod+x [class="Firefox"] kill
# 同上，除了匹配时忽略大小写
# bindsym $mod+x [class="(?i)firefox"] kill
# 以红色打印 Firefox 窗口的窗口标题
for_window [class="(?i)google-chrome-stable"]    title_format "<span foreground='red'>%title</span>"
for_window [class="(?i)google-chrome"]           title_format "<span foreground='red'>%title</span>"
for_window [class="(?i)H[google-chrome]"]        title_format "<span foreground='red'>%title</span>"
for_window [class="(?i)google chrome"]           title_format "<span foreground='red'>%title</span>"
for_window [class="(?i)Google Chrome"]           title_format "<span foreground='red'>%title</span>"
for_window [class="(?i)googlechrome"]            title_format "<span foreground='red'>%title</span>"
for_window [class="(?i)nm"]                      title_format "<span foreground='red'>%title</span>"
for_window [class="(?i)st"]                      title_format "<span foreground='#ff3333'>%title</span>"

for_window [class="(?i)firefox"]                title_format "<span foreground='red'>%title</span>"
for_window [class="(?i)spyder"]                 title_format "<span foreground='blue'>%title</span>"
for_window [class="(?i)wps"]                    title_format "<span foreground='purple'>%title</span>"
for_window [class="(?i)wt"]                     title_format "<span foreground='purple'>%title</span>"
for_window [class="(?i)wpp"]                    title_format "<span foreground='purple'>%title</span>"
for_window [class="(?i)latex"]                  title_format "<span foreground='#6600cc'>%title</span>"
for_window [class="(?i)netease-cloud-music"]    title_format "<span foreground='#4ce600'>%title</span>"


# 以粗体打印所有窗口标题
for_window [class=".*"] title_format "<b>%title</b>"

#############################
### settings for i3-gaps: ###
#############################

# 把所有的窗口边框设为 2 像素
for_window [class="^.*"] border pixel 2
# 设置窗口间距,参数根据自己屏幕尺寸微调就行
gaps inner 5
gaps outer 5
smart_gaps on

# 在只有一个窗口的情况下自动最大化当前的窗口，不处理窗口的Gap。
smart_borders on



set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 1
        bindsym minus gaps inner current minus 1
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 1
        bindsym Shift+minus gaps inner all minus 1
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 1
        bindsym minus gaps outer current minus 1
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 1
        bindsym Shift+minus gaps outer all minus 1
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# screen off | sleep | shutdown(time unit: seconds)
#exec --no-startup-id xset dpms 300 1357 6789
exec --no-startup-id xset dpms 0 0 0

#======================================================================================================
### 边框，窗口间距，  over
#======================================================================================================



#=======================================设置一下颜色主题==================================================
# 设置一下颜色主题，这个比较重要，建议根据自己的配色来微调。 依次是边框颜色、背景色、文本颜色、焦点指示顔色和子窗口的边框颜色。
# 以 client.focused client.focused_inactive client.unfocused client.urgent client.placeholder client.background 开头的是设置对应的东西的颜色的。
# #  class                 border   backgr.  text  indicator  child_border
# client.focused          #4c7899  #285577  #ffffff  #2e9ef4   #285577
# client.focused          #00ffff  #00ffff  #ffffff  #2e9ef4   #285577
# client.focused_inactive #81c2d6  #5f676a  #ffffff  #484e50   #0b6e48
# client.unfocused        #c9cabb  #222222  #888888  #292d2e   #222222
# client.urgent           #2f343a  #900000  #ffffff  #199475   #900000
# client.placeholder      #a2b4ba  #0c0c0c  #ffffff  #1793d0   #0c0c0c
# client.background       #82abba


set_from_resource $term_background background
set_from_resource $term_foreground foreground
set_from_resource $term_color0     color0
set_from_resource $term_color1     color1
set_from_resource $term_color2     color2
set_from_resource $term_color3     color3
set_from_resource $term_color4     color4
set_from_resource $term_color5     color5
set_from_resource $term_color6     color6
set_from_resource $term_color7     color7
set_from_resource $term_color8     color8
set_from_resource $term_color9     color9
set_from_resource $term_color10    color10
set_from_resource $term_color11    color11
set_from_resource $term_color12    color12
set_from_resource $term_color13    color13
set_from_resource $term_color14    color14
set_from_resource $term_color15    color15

#set $background #10101000
#set $foreground #ffffff
#set $gray       #d0d0d0
#set $secondary  #79D4D5
#set $additional #26CE8D
#set $warning    #E7176A

##set $primary    #F58E8E
##set $tertiary   #7AABD4

#set $primary    #F99157
#set $tertiary   #5c4d4d

#=======================================颜色主题over==================================================


#=================================================================================================================
#==============================================bar =====================================================
#=================================================================================================================

# Polybar reload
bindsym mod1+p exec "$HOME/.config/i3/polybar/i3bar"




exec --no-startup-id "setxkbmap -layout us,ru -option 'grp:ctrl_alt_toggle'"

#i3block插件需要的信号配置 kbdd_layout
bindsym --release Caps_Lock exec pkill -SIGRTMIN+10 i3blocks
bindsym --release Num_Lock  exec pkill -SIGRTMIN+10 i3blocks
bindsym --release Scroll_Lock  exec pkill -SIGRTMIN+10 i3blocks

bar {
    # i3bar_command $HOME/.config/polybar/launch.sh
    # status_command i3status
    # status_command i3blocks
    # status_command i3status -c   /home/jack/.config/i3/i3status.conf
    status_command  SCRIPT_DIR=~/.config/i3/i3blockScripts/ i3blocks -c   /home/jack/.config/i3/i3blocks.conf
    # status_command conky    -c   ~/.config/i3/conkyrc_bar/conkyrc

    # i3bar_command ~/.config/i3/i3_lemonbar/i3_lemonbar.py

    i3bar_command i3bar --transparency
    # status_command  /home/jack/.config/i3/i3script/net-speed.sh
    #状态栏实时显示网速
    # status_command exec  bash ~/.config/i3/i3script/net-speed.sh

    position top
    #i3bar 有三种显示模式（dock 停靠，hide 隐藏，invisible 无形）
    mode  dock

    # 是否显示工作区按钮
    workspace_buttons yes
    # workspace_min_width 40

    #指定输出位置，默认是全部显示器都有，单独设置可以启动多个不同的：
    output eDP-1
    output primary

    #托盘显示位置：tray_output none|primary|<output>
    ## 在主显示器上显示托盘图标
    tray_output primary

    # 在大显示器上显示托盘图标
    # tray_output HDMI2

    # 禁用系统托盘
    # tray_output none

    # 遵循费兹法则
    #托盘内容之间的间距：
    tray_padding 0

    # 绑定模式指示器
    binding_mode_indicator yes

    #设置字体：
    font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
    # font pango:CaskaydiaCove Nerd Font Mono SemiLight 10
    font pango:System San Francisco Display 10.5
    # font pango:Monaco for Powerline 10
    # font pango:wqy-zenhei 10

    #分隔符：
    separator_symbol "|"

    #清除工作区号码，如果指定了名字，清除了挺好的：
    strip_workspace_numbers yes


colors {
    background #073642
    statusline #eee8d5
    focused_workspace #cb4b16 #cb4b16 #eee8d5
    active_workspace #cb4b16 #cb4b16 #eee8d5
    inactive_workspace #b58900 #b58900 #eee8d5
}

    ## greenish
    # colors {
    #     background #0D0D0D
    #     statusline #EFEFEF
    #     separator #666666
    #     focused_workspace  #4F4F4F #4F4F4F #8CFF00
    #     active_workspace   #0D0D0D #0D0D0D #EFEFEF
    #     inactive_workspace #0D0D0D #0D0D0D #EFEFEF
    #     urgent_workspace   #2f343a #900000 #ffffff
    # }



    # colors {
    #     background  #212121
    #     statusline  #dddddd
    #     separator   #666666
    #     # class             border  backgr. text
    #     focused_workspace   #2b83a6 #2b83a6 #ffffff
    #     active_workspace    #212121 #212121 #ffffff
    #     inactive_workspace  #212121 #212121 #86888c
    #     urgent_workspace    #d64e4e #d64e4e #ffffff
    #     binding_mode        #229c56 #229c56 #ffffff
    # }
    # height 40
}



#===workspace control===

#以 workspace 开头的是设置工作区显示在哪个屏幕的。

# Workspace names
#workspace "1:Arch" output eDP1
#workspace "2:Web" output eDP1
#workspace "3:Code" output eDP1
#workspace "9:Mail" output eDP1

# 以 assign 开头的是设置自动移到工作区。
# assign [class="Chromium"] 1
# assign [class="code"] 3

#===programs shortcuts===

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec st
bindsym $mod+x exec xterm
bindsym $mod+y exec yakuake


# printscreen--scrot(Print=PrtSc/PrintScreen)
# bindsym $mod+Print exec scrot
#快速截图,自己选则截图区域，5s延时，并保存至 ~/图片
bindsym --release $mod+Print exec "scrot -cd 3 -q 1 -s $(xdg-user-dir PICTURES)/'Scrot_%Y-%m-%d_%H:%M:%S_$wx$h.png' -e 'viewnior $f'";exec notify-send 'Scrot截图 选择区域 保存指定路径 打开查看'

# #  截取全屏，无GUI，无延时，保存指定路径,打开查看
# bindsym Print exec --no-startup-id "scrot 'Scrot_%Y-%m-%d-%S_$wx$h.png' -e 'mv $f $$(xdg-user-dir PICTURES) ; viewnior $$(xdg-user-dir PICTURES)/$f'";exec notify-send 'Scrot截图 截取全屏，无GUI，保存指定路径'
# #  截取全屏，无GUI，保存指定路径,延迟3s,打开查看  ScrollLock在i3wm中为Scroll_Lock
# bindsym $mod+Scroll_Lock exec --no-startup-id "scrot -cd 3 'Scrot_%Y-%m-%d-%S_$wx$h.png' -e 'mv $f $$(xdg-user-dir PICTURES) ; viewnior $$(xdg-user-dir PICTURES)/$f'";exec notify-send 'Scrot截图 截取全屏 无GUI 保存指定路径 延迟3s'
# # 截取全屏，无GUI， 保存指定路径,延迟3s,复制到剪切板,打开查看
# bindsym Scroll_Lock exec --no-startup-id "scrot -cd 3 $(xdg-user-dir PICTURES)'/Scrot_%F_%T_$wx$h.png' -e 'xclip -selection clipboard -target image/png -i $f; viewnior $$(xdg-user-dir PICTURES)/$f'";exec notify-send 'Scrot截图 截取全屏 无GUI 保存指定路径 延迟3s 复制到剪切板'

#  截取全屏，无GUI，无延时，保存指定路径, 打开查看
bindsym Scroll_Lock     exec --no-startup-id "scrot $(xdg-user-dir PICTURES)/'Scrot_%Y-%m-%d_%H:%M:%S_$wx$h.png' -e 'viewnior $f'";exec notify-send 'Scrot截图 截取全屏，无GUI，保存指定路径 打开查看'
#  截取全屏，无GUI，延迟3s,保存指定路径,打开查看  ScrollLock在i3wm中为Scroll_Lock
bindsym $mod+Scroll_Lock exec --no-startup-id "scrot -cd 3 $(xdg-user-dir PICTURES)/'Scrot_%Y-%m-%d_%H:%M:%S_$wx$h.png' -e 'viewnior $f'";exec notify-send 'Scrot截图 截取全屏 无GUI 保存指定路径 延迟3s 打开查看'
# 截取全屏，无GUI，延迟3s, 保存指定路径,复制到剪切板,打开查看
bindsym Print      exec --no-startup-id "scrot -cd 3 $(xdg-user-dir PICTURES)/'Scrot_%Y-%m-%d_%H:%M:%S_$wx$h.png' -e 'xclip -selection clipboard -target image/png -i $f; viewnior $f'";exec notify-send 'Scrot截图 截取全屏 无GUI 保存指定路径 延迟3s 复制到剪切板 打开查看'


# win+shift+Print深度截图,自己选择截图区域
bindsym $mod+Shift+Print exec  --no-startup-id deepin-screenshot;exec notify-send '深度截图'


# win+shift+Print火焰截图,自己选择截图区域,保存在~/图片 或~/Picture
bindsym Shift+Print exec  --no-startup-id flameshot gui -p  $(xdg-user-dir PICTURES) -d 2000 ;exec notify-send '火焰截图 无延时 自己选择截图区域 保存在~/图片'
#  捕获全屏（无GUI）并保存到剪贴板和路径,延迟2秒
bindsym Control+Print exec  --no-startup-id  flameshot full -c -p  $(xdg-user-dir PICTURES)  -d 2000 ;exec notify-send '火焰截图 捕获全屏（无GUI）并保存到剪贴板和路径~/图片 延迟2秒'


# dmenu (a program launcher)
bindsym $mod+i exec --no-startup-id i3-dmenu-desktop
# rofi和dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
bindsym $mod+r exec --no-startup-id rofi  -show combi



# 设置快捷键来显示隐藏 polybar
# bindsym $mod+p exec --no-startup-id polybar-msg cmd toggle



# Use pactl to adjust volume in PulseAudio. && pkill -RTMIN+1 i3blocks是为了配合使用i3block状态栏[volume-pulseaudio]加的
# 我使用的是 pulseaudio，所以我使用 pactl 来调节音量
set $refresh_i3status killall -SIGUSR1 i3status
bindsym   $mod+Control+equal         exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +8% && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym   $mod+Control+minus         exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -8% && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym   $mod+Control+BackSpace     exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status  && pkill -RTMIN+1 i3blocks


bindsym XF86AudioRaiseVolume       exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +8% && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume       exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -8% && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym XF86AudioMute              exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym XF86AudioMicMute           exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status  && pkill -RTMIN+1 i3blocks



# 音量调节
bindsym $mod+F3                exec amixer set Master 5%+                    umute && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym $mod+F2                exec amixer set Master 5%-                    umute && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym $mod+F1                exec amixer -D pulse set Master 1+ toggle     umute && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym $mod+Shift+minus       exec amixer set Master playback 5-            umute && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym $mod+Shift+equal       exec amixer set Master playback 5+            umute && $refresh_i3status  && pkill -RTMIN+1 i3blocks
bindsym $mod+Shift+BackSpace   exec amixer -D pulse set Master 1+ toggle     umute && $refresh_i3status  && pkill -RTMIN+1 i3blocks
#bindsym $mod+o exec amixer set Master toggle
#bindsym $mod+p exec amixer set PCM toggle

# 我使用 xbacklight 来调节亮度，你也可以选择安装其他的
bindsym XF86MonBrightnessUp exec xbacklight -inc 5
bindsym XF86MonBrightnessDown exec xbacklight -dec 5


# 音乐播放器 controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# 更换壁纸
bindsym $mod+Control+b exec feh --recursive --randomize --bg-fill /home/jack/图片/Wallpapers/



#开启/关闭触摸板
bindsym XF86TouchpadToggle   exec --no-startup-id bash $HOME/.config/i3/i3script/touchpad.sh
bindsym $mod+Control+t       exec --no-startup-id bash $HOME/.config/i3/i3script/touchpad.sh




# 常用应用
set $mode_launcher [g]谷歌浏览器 [n]文件夹[s]flameshot [t]Typora [p]Spyder [q]QQ [c]微信
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym f exec firefox, mode "default"
    # bindsym t exec thunderbird
    bindsym g exec google-chrome-stable, mode "default"
    bindsym n exec nautilus, mode "default"
    bindsym Shift+p exec pcmanfm, mode "default"
    bindsym Shift+t exec thunar, mode "default"
    bindsym z exec zathura, mode "default"
    bindsym t exec typora, mode "default"
    bindsym p exec spyder, mode "default"
    bindsym q exec /usr/local/bin/qq, mode "default"
    bindsym c exec /opt/deepinwine/apps/Deepin-WeChat/run.sh, mode "default"
    bindsym d exec  /opt/baidunetdisk/baidunetdisk, mode "default"
    bindsym b exec blueman-manager, mode "default"
    bindsym s exec --no-startup-id flameshot gui -p  ~/图片/ -d 2000, mode "default"
    bindsym w exec VBoxManage startvm "win10"  --type gui, mode "default"
    bindsym m exec --no-startup-id netease-cloud-music, mode "default"

    bindsym $mod+o mode "default"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
# 设置火焰截图
# bindsym $mod+Shift+s exec --no-startup-id flameshot gui
# # browsers--firefox chromium
# bindsym $mod+Shift+f exec firefox
# bindsym $mod+Shift+c exec google-chrome-stable


# start the bluetooth
# bindsym $mod+Shift+b exec blueman-manager
# bindsym $mod+Shift+b exec blueberry

# start the win10
# bindsym $mod+Shift+v exec VBoxManage startvm "win10" --type gui




# wps, et, wpp
bindsym $mod+Shift+w exec wps
bindsym $mod+Shift+e exec /usr/bin/et
bindsym $mod+Shift+p exec wpp

# steam
bindsym $mod+Control+s exec steam

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# set $ws1 1:壹
# set $ws2 2:贰
# set $ws3 3:叁
# set $ws4 4:肆
# set $ws5 5:伍
# set $ws6 6:陆
# set $ws7 7:柒
# set $ws8 8:捌
# set $ws9 9:玖
# set $ws10 0:拾

# workspace names e 🐧"
# set $ws1 1:
# set $ws2 2:
# set $ws3 3:
# set $ws4 4:
# set $ws5 5:
# set $ws6 6:
# set $ws7 7:
# set $ws8 8:
# set $ws9 9:
# set $ws10 0:

# set $ws1         1:Browser
# set $ws2         2:Code
# set $ws3         3:Terminal
# set $ws4         4:File
# set $ws5         5:Chat
# set $ws6         6:Video
# set $ws7         7:Music
# set $ws8         8:Graphic
# set $ws9         9:Game
# set $ws10        10:Fullscreen


set $ws1         1:Browser
set $ws2         2:code
set $ws3         3:Term
set $ws4         4:File
set $ws5         5:Chat
set $ws6         6:Video
set $ws7         7:Music
set $ws8         8:Graphic
set $ws9         9:Game
set $ws10        10:全屏


# # 设置启动对应应用之后的默认工作空间，获取对应app应用对应类的方式为xprop
# assign [class="Rhythmbox"] $ws4
# assign [class="Google-chrome"] $ws3
# assign [class="Firefox-esr"]$ws3
# assign [class="jetbrains-studio"]$ws2
# assign [class="Thunar"]$ws6
# assign [class="Postman"]$ws7
# assign [class="Wireshark"]$ws8
# assign [class="DBeaver"]$ws9
# assign [class="kdesvn"]$ws10

#=======================================================================================
#================= win+num快速跳转到指定工作区 ===============================
#=======================================================================================

# switch to workspace
# 移动至其他工作空间: $mod+$num
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

#========================================================================================================================================
#====================  在一个工作区之间聚焦不同容器以及在一个工作区中移动容器，但是不离开此工作区 ================================
#========================================================================================================================================


# change focus 聚焦于左、下、上、右边的容器
# 移动焦点于其他窗口(左下上右):semicolon为分号
bindsym $mod+h      focus left
bindsym $mod+j      focus down
bindsym $mod+k      focus up
bindsym $mod+l      focus right
# change focus
bindsym $mod+$left   focus left
bindsym $mod+$down   focus down
bindsym $mod+$up     focus up
bindsym $mod+$right  focus right
# alternatively, you can use the cursor keys:
bindsym $mod+Left    focus left
bindsym $mod+Down    focus down
bindsym $mod+Up      focus up
bindsym $mod+Right   focus right


bindsym $mod+comma              focus left
bindsym $mod+shift+comma        focus down
bindsym $mod+Shift+period       focus up
bindsym $mod+period             focus right

bindsym $mod+q              focus left
bindsym $mod+w              focus right

# toggle tiling / floating,将当前container(焦点窗口)在浮动和固定窗口间切换
bindsym $mod+Shift+space floating toggle
# 在浮动/平铺容器之间切换.聚焦于上一个拥有焦点的浮动/平铺容器.change focus between tiling / floating windows,在浮动和固定窗口之间切换光标聚焦
bindsym $mod+space focus mode_toggle



# move focused window
# move floating/tiling window
# 将容器向左、下、上、右边移动
bindsym $mod+Shift+h   move left
bindsym $mod+Shift+j   move down
bindsym $mod+Shift+k   move up
bindsym $mod+Shift+l   move right
# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left   move left
bindsym $mod+Shift+Down   move down
bindsym $mod+Shift+Up     move up
bindsym $mod+Shift+Right  move right
# move focused window
bindsym $mod+Shift+$left   move left
bindsym $mod+Shift+$down   move down
bindsym $mod+Shift+$up     move up
bindsym $mod+Shift+$right  move right

bindsym $mod+Control+comma        move left
bindsym $mod+Control+period       move right



# 移动容器到当前光标的位置
# bindsym $mod+m focus floating ;move position mouse

# focus the parent container聚焦父容器
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+e focus child


#========================================================================================================================================
#====================  在一个工作区之间聚焦不同容器以及在一个工作区中移动容器，但是不离开此工作区over ================================
#========================================================================================================================================




#============================================================================================================================================
#====================  将容器在工作区之间移动,以及依次跳转工作区,以及在现在聚焦和之前聚焦的工作区之间跳转 ================================
#=============================================================================================================================================


# move focused container to workspace
# 将焦点窗口移动至其他工作空间: $mod+Shift+$num
bindsym $mod+Shift+1 move container to workspace  $ws1
bindsym $mod+Shift+2 move container to workspace  $ws2
bindsym $mod+Shift+3 move container to workspace  $ws3
bindsym $mod+Shift+4 move container to workspace  $ws4
bindsym $mod+Shift+5 move container to workspace  $ws5
bindsym $mod+Shift+6 move container to workspace  $ws6
bindsym $mod+Shift+7 move container to workspace  $ws7
bindsym $mod+Shift+8 move container to workspace  $ws8
bindsym $mod+Shift+9 move container to workspace  $ws9
bindsym $mod+Shift+0 move container to workspace  $ws10

# 将焦点窗口移动至其他工作空间,bu跳转至其他工作空间
bindsym $mod+Shift+exclam       move container to workspace 1
bindsym $mod+Shift+at           move container to workspace 2
bindsym $mod+Shift+numbersign   move container to workspace 3
bindsym $mod+Shift+dollar       move container to workspace 4
bindsym $mod+Shift+percent      move container to workspace 5
bindsym $mod+Shift+asciicircum  move container to workspace 6
bindsym $mod+Shift+ampersand    move container to workspace 7
bindsym $mod+Shift+asterisk     move container to workspace 8
bindsym $mod+Shift+parenleft    move container to workspace 9
bindsym $mod+Shift+parenright   move container to workspace 10

# Move to workspace with focused container
# 多个命令可以用 ;（分号）连接。所以，如果想要将一个窗口移动到一个工作区中并立即切换到这个工作区，你可以配置如下的按键绑定：
# 将焦点窗口移动至其他工作空间,并跳转至其他工作空间: $mod+Shift+$num
bindsym $mod+Control+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Control+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Control+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Control+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Control+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Control+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Control+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Control+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Control+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Control+0 move container to workspace $ws0; workspace $ws0

# 快速在两个Workspace之间跳转, 在当前聚焦的和上一个聚焦的工作区之间切换
bindsym $mod+b workspace back_and_forth
# 将当前容器(一个界面)快速在两个workspace之间来回移动
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# 如果你想让一个窗口固定在显示器上，即使你切换到另一个工作区，它还留在屏幕上，那么你可以使用 sticky 命令。例如，这对记事本、媒体播放器或视频聊天窗口很有用。
# 请注意，虽然任何窗口都可以通过这个命令变成固定的，但只有在窗口是浮动的情况下才会生效。
bindsym $mod+Shift+s sticky toggle

# slash:/   quoteright:'  comma:,  period:.
# 将当前容器移动到前/后的工作区并聚焦于前/后工作区
# bindsym $mod+slash             move container to workspace prev; workspace prev
# bindsym $mod+quoteright        move container to workspace next; workspace next

#---switch workspace---
# 聚焦于前后工作区
bindsym $mod+semicolon              workspace prev
bindsym $mod+quoteright             workspace next
# 在workspace之间来回切换
bindsym $mod+Tab                    workspace next
bindsym Mod1+Tab                    workspace prev

# 将当前容器移动到前/后的工作区但仍然处于当前工作区
bindsym $mod+Shift+semicolon        move container to workspace prev
bindsym $mod+Shift+quoteright       move container to workspace next

# 将当前容器移动到前/后的工作区并聚焦于前/后工作区
bindsym $mod+Control+semicolon      move container to workspace prev; workspace prev
bindsym $mod+Control+quoteright     move container to workspace next; workspace next


#=================================================================================================
#====================  将容器在工作区之间移动 over ================================
#=================================================================================================


#================================================================================================================================
# =========================  在显示器之间移动工作区,在显示器之间移动窗口container,
#================================================================================================================================
# 在显示器之间移动工作区workspace,移动整个工作间到右边的显示输出
# 移动目前工作区到下一个输出（如果你只有两个输出，相当于在两个输出之间切换）
# Strangely, I'd expect the $mod+Ctrl+greater to require me to hit Ctrl and Shift at the same time, since you need to press Shift to type < and >. However, pressing just mod, Ctrl, and , works, which is very nice.
# Moving wrokspaces between screens,braceleft={  braceright=}
bindsym $mod+Control+braceleft     move workspace to output left
bindsym $mod+Control+braceright    move workspace to output right
bindsym $mod+Control+bracketleft   move workspace to output left
bindsym $mod+Control+bracketright  move workspace to output right
# bindsym $mod+Control+less           move workspace to output left
# bindsym $mod+Control+greater        move workspace to output right

# 在显示器之间移动窗口container
# move focused window between monitors, bracketleft=[  bracketright=]
bindsym $mod+Shift+bracketleft    move container to output left
bindsym $mod+Shift+bracketright   move container to output right
# bindsym $mod+Shift+greater          move container to output right
# bindsym $mod+Shift+less             move container to output left

# # 将此窗口移动到投影仪输出
# bindsym $mod+x move container to output VGA1
# # 将此窗口移到主输出
# bindsym $mod+x move container to output primary



# 聚焦于左右边的显示器输出
bindsym $mod+bracketleft  focus output left
bindsym $mod+bracketright focus output right
# 聚焦于显示输出 HDMI-2
# bindsym $mod+braceright focus output HDMI-2

# 聚焦于主显示输出
# bindsym $mod+braceleft focus output primary

#================================================================================================================================
# =========================  在显示器之间移动工作区,在显示器之间移动窗口container
#================================================================================================================================


# 以 focus_follows_mouse 开头的是设置焦点是否跟随鼠标。
focus_follows_mouse yes

#以 popup_during_fullscreen 开头的是设置全屏模式下遇到弹窗的处理方法。
#popup_during_fullscreen smart|ignore|leave_fullscreen
popup_during_fullscreen smart

#以 force_display_urgency_hint 开头的是设置是否启用延时焦点复位，能防止不知道那个窗口发送了提示。
#force_display_urgency_hint <timeout> ms
force_display_urgency_hint 500 ms

# 这个选项可以指定窗口标题对齐的方向，默认为 left（左对齐）。
# 格式：title_align left|center|right
title_align center



# 水平分割窗口,新建窗口位于现窗口右方(默认为右方): $mod+g
# 需要在按$mod+Return之前按$mod+g
bindsym $mod+g split h;exec notify-send 'split horizontally'

# 垂直分割窗口,新建窗口位于现窗口下方(默认为右方): $mod+V
# 需要在按$mod+Return之前按$mod+v
bindsym $mod+v split v;exec notify-send 'split vertically'

#以 default_orientation 开头的是设置新工作区默认打开方向。
# default_orientation horizontal|vertical|auto
default_orientation auto


# 这个选项决定了工作区级别的容器该用什么布局模式
# workspace_layout default|stacking|tabbed
workspace_layout tabbed

# 鼠标活动
# mouse_warping output|none
mouse_warping output


#全屏模式下的弹出窗口,popup_during_fullscreen smart|ignore|leave_fullscreen
popup_during_fullscreen smart

# change container layout (stacked, tabbed, toggle split),mod1为Alt
# stacking模式(工作空间里只显示一个活动的窗口,在工作空间上方得到一个窗口的列表):堆叠式
bindsym $mod+Mod1+s layout stacking
# tabbed模式(与stacking模式类似,不过是类似浏览器式的标签页):标签化
bindsym $mod+Mod1+t layout tabbed
# tiling模式(默认模式,平铺式窗口):使用 splith/splitv（重复按下可在两者间切换）
bindsym $mod+Mod1+c layout toggle split


# # 在堆叠/标签/分割之间切换
# bindsym $mod+Mod1+x layout toggle

# # 在堆叠/标签/横向分割/纵向分割之间切换
# bindsym $mod+Mod1+x layout toggle all

# # 在堆叠/标签/横向分割之间切换
# bindsym $mod+Mod1+x layout toggle stacking tabbed splith

## 在纵向分割/标签之间切换
# bindsym $mod+Mod1+x layout toggle splitv tabbed

## 在横向分割/标签之间切换
# bindsym $mod+Mod1+x layout toggle splith tabbed


## 在横向分割/纵向分割/标签之间切换
bindsym $mod+Mod1+x layout toggle  tabbed splith splitv



# 使当前聚焦的窗口成为便笺簿
# bindsym $mod+Shift+minus move scratchpad
bindsym $mod+Insert move scratchpad

# 显示第一个便笺簿窗口
# bindsym $mod+minus scratchpad show
bindsym $mod+Delete scratchpad show
# hide | show window(minus is "-" and plus is "+".)
# 此时执行Win + Shift + Space键即可将其恢复成普通窗口

#---window focus---
#以 workspace_auto_back_and_forth 开头的是设置是否启用回到之前的工作区的。
#workspace_auto_back_and_forth yes|no
# 例如：假设你在工作区“1：www”并使用 mod+2 切换到“2：IM”，因为有人向你发送了一条消息。你现在不需要记住你是从哪里切换过来的，你只需再次按 $mod+2 即可切换回“1: www”。
workspace_auto_back_and_forth yes


#===window control===
# enter fullscreen mode for the focused container
# 全屏
bindsym $mod+f fullscreen toggle




#以 mode 开头的是组合模块，可以在快捷键之后选择做的事。
# resize window (you can also use the mouse for that)
# resize模式(用于在tiling模式下调整各窗口的占用空间,使用J/K/L/;调整): $mod+R
set $resizew 调整窗口大小:[H/Left]变窄 [L/Right]变宽 [K/Up]变矮 [J/Down]变长长
bindsym $mod+s mode "$resizew"
mode "$resizew" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h    resize shrink   width     20  px or 20  ppt
        bindsym k    resize grow     height    20  px or 20  ppt
        bindsym j    resize shrink   height    20  px or 20  ppt
        bindsym l    resize grow     width     20  px or 20  ppt

        bindsym Shift+h resize shrink   width     10  px or 10  ppt
        bindsym Shift+k resize grow     height    10  px or 10  ppt
        bindsym Shift+j resize shrink   height    10  px or 10  ppt
        bindsym Shift+l resize grow     width     10  px or 10  ppt


        # same bindings, but for the arrow keys
        bindsym Left   resize    shrink    width    5 px or 5 ppt
        bindsym Up     resize    grow      height   5 px or 5 ppt
        bindsym Down   resize    shrink    height   5 px or 5 ppt
        bindsym Right  resize    grow      width    5 px or 5 ppt

        bindsym Shift+Left   resize    shrink    width    15   px or 15   ppt
        bindsym Shift+Up     resize    grow      height   15   px or 15   ppt
        bindsym Shift+Down   resize    shrink    height   15   px or 15   ppt
        bindsym Shift+Right  resize    grow      width    15   px or 15   ppt




        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}


# win+-/= 改变窗口的宽度
bindsym  $mod+minus          resize   shrink width 5   px or 5 ppt
bindsym  $mod+equal          resize   grow   width 5   px or 5 ppt
bindsym  $mod+$mod1+minus    resize   shrink height5   px or 5 ppt
bindsym  $mod+$mod1+equal    resize   grow   height5   px or 5 ppt


# move floating window
set $movefw   快速移动窗口:[上]k/K/up/Up  [下]j/J/down/Down [左]h/H/left/Left [右]l/L/right/Right
mode "$movefw" {
    bindsym k           move up     50px
    bindsym h           move left   50px
    bindsym j           move down   50px
    bindsym l           move right  50px

    bindsym Shift+k     move up      20px
    bindsym Shift+h     move left    20px
    bindsym Shift+j     move down    20px
    bindsym Shift+l     move right   20px

    bindsym Up          move up      30px
    bindsym Left        move left    30px
    bindsym Down        move down    30px
    bindsym Right       move right   30px

    bindsym Shift+Up     move up     40px
    bindsym Shift+Left   move left   40px
    bindsym Shift+Down   move down   40px
    bindsym Shift+Right  move right  40px



    bindsym $mod+m mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"

}
bindsym $mod+m focus floating; mode "$movefw"


# redshift modes
bindsym $mod+Shift+r mode "$mode_redshift"
set $mode_redshift 设置色温: (a)uto, (r)重置, (2)500K, (3)000K, (35)00, (4)000K, (45)00, (5)000K
set $kill_redshift pkill -9 redshift;
mode "$mode_redshift" {
    bindsym a exec --no-startup-id "$kill_redshift redshift -P -t 5000:4000", mode "default"
    bindsym r exec --no-startup-id "$kill_redshift redshift -x",              mode "default"
    bindsym 2 exec --no-startup-id "$kill_redshift redshift -P -O 2500", mode "default"
    bindsym 3 exec --no-startup-id "$kill_redshift redshift -P -O 3000", mode "default"
    bindsym 4 exec --no-startup-id "$kill_redshift redshift -P -O 3500", mode "default"
    bindsym 4 exec --no-startup-id "$kill_redshift redshift -P -O 4000", mode "default"
    bindsym 4 exec --no-startup-id "$kill_redshift redshift -P -O 4500", mode "default"
    bindsym 5 exec --no-startup-id "$kill_redshift redshift -P -O 5000", mode "default"

    # exit mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}


# kill focused window 关闭窗口: $mod+Shift+Q
bindsym $mod+Shift+q kill

# reload the configuration file
bindsym $mod+Control+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
# 重启i3: $mod+Shift+R
bindsym $mod+Control+r restart


# kill focused window
bindsym --release $mod+$mod1+q exec --no-startup-id xkill


#********************************************* 锁屏等 *************************************
#锁屏等 i3lock
mode "i3lock: Return to lock/Escape to Cancel" {
            bindsym Return mode "default" exec i3lock -I 600 -i ~/图片/Wallpapers/wallhaven-nzmm3g.jpg
            bindsym Escape mode "default"
    }

bindsym $mod+F12 mode "i3lock: Return to lock/Escape to Cancel"
# bindsym $mod+Control+l mode "i3lock: Return to lock/Escape to Cancel"
bindsym $mod+Control+l exec slock
bindsym $mod+Control+x exec xscreensaver-command  -lock

#*********************************************电源管理*************************************
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Control+Escape exec "i3-nagbar -t warning -m '您确定离开i3吗? ' -B '是的,离开i3' 'i3-msg exit'"

#配合i3block使用
bindsym $mod+Control+Delete exec  bash  ~/.config/i3/i3blockScripts/shutdown_menu.sh

# win+c可以调出选项，你可以选择锁屏(I/L/X) (E)注销,离开i3 (R)重启 (S)关机 退出选项(Esc)。
set $mode_system select:[L]slock [X]xscreens [B]betterlock [I]i3lock [E]离开i3,注销 [R]重启 [S]关机 [H]睡眠 [Esc]exit
bindsym $mod+Control+e mode "$mode_system"
mode "$mode_system" {

    # 锁屏
    bindsym i exec --no-startup-id i3lock -c '#808080',        mode "default"
    bindsym l exec --no-startup-id slock,                      mode "default"
    bindsym x exec --no-startup-id xscreensaver-command -lock, mode "default"
    bindsym b exec --no-startup-id betterlockscreen -l,        mode "default"
    #离开i3,
    bindsym e  exec --no-startup-id i3-msg exit,               mode "default"

    # 重启
    # bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym r exec --no-startup-id  reboot,                    mode "default"
    # bindsym r exec --no-startup-id  init 6, mode "default"
    # bindsym s exec --no-startup-id shutdown -r now, mode "default"

    #关机
    bindsym s exec --no-startup-id shutdown -h now,            mode "default"
    # bindsym s exec --no-startup-id init 0, mode "default"

    # 注销
    bindsym o exec --no-startup-id logout,                     mode "default"

    #停止设备运行
    # bindsym h exec --no-startup-id systemctl halt, mode "default"
    # bindsym h exec --no-startup-id shutdown --halt now, mode "default"
    # bindsym h exec --no-startup-id shutdown -H now, mode "default"
    # bindsym h exec --no-startup-id halt, mode "default"

    #切断电源(默认),注销,关闭电源,一般用不到，慎用
    # bindsym p exec --no-startup-id shutdown --poweroff now, mode "default"
    # bindsym p exec --no-startup-id shutdown -P now, mode "default"
    # bindsym p exec --no-startup-id systemctl poweroff, mode "default"
    # bindsym p exec --no-startup-id halt, mode "default"
    # bindsym p exec --no-startup-id poweroff, mode "default"
}

# Set shut down, restart and locking features
set $mode_system3 [l]ock [e]xit switch_[u]ser [s]uspend [h]ibernate [r]eboot [Shift+s]hutdown
bindsym $mod+Mod1+Escape mode "$mode_system3"
mode "$mode_system3" {
    bindsym l exec --no-startup-id i3exit lock,           mode "default"
    bindsym s exec --no-startup-id i3exit suspend,        mode "default"
    bindsym u exec --no-startup-id i3exit switch_user,    mode "default"
    bindsym e exec --no-startup-id i3exit logout,         mode "default"
    bindsym h exec --no-startup-id i3exit hibernate,      mode "default"
    bindsym r exec --no-startup-id i3exit reboot,         mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# systemctl命令参数包括：
# halt	进入系统关闭的模式，电源可能不切断
# poweroff	进入系统关机模式，电源切断
# reboot	直接重新启动
# suspend	系统挂起，进入休眠模式


#*********************************************电源管理over*************************************

# 因为个人习惯，默认去除了鼠标和触摸板的加速度，可以在 i3wm 的主配置中修改。建议在其它环境下(例如 GNOME)配置好比较输入的参数，然后获取以后粘贴到 i3wm 的配置中。
exec --no-startup-id xinput --set-prop 'TPPS/2 IBM TrackPoint' 'libinput Accel Speed' -0.6
exec --no-startup-id xinput --set-prop 'TPPS/2 IBM TrackPoint' 'libinput Accel Speed Default' 0
#xinput --set-prop 'TPPS/2 IBM TrackPoint' 'libinput Accel Profiles Available' 1, 1
exec --no-startup-id xinput --set-prop 'TPPS/2 IBM TrackPoint' 'libinput Accel Profile Enabled' 1, 0
exec --no-startup-id xinput --set-prop 'TPPS/2 IBM TrackPoint' 'libinput Accel Profile Enabled Default' 1, 0

exec --no-startup-id xinput --set-prop 'Synaptics TM3072-003' 'libinput Tapping Enabled' 1
exec --no-startup-id xinput --set-prop 'Synaptics TM3072-003' 'libinput Accel Speed' -0.22
exec --no-startup-id xinput --set-prop 'Synaptics TM3072-003' 'libinput Click Methods Available' 1, 1
exec --no-startup-id xinput --set-prop 'Synaptics TM3072-003' 'libinput Click Method Enabled' 0, 1
exec --no-startup-id xinput --set-prop 'Synaptics TM3072-003' 'Coordinate Transformation Matrix' 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0


#*********************************************电源管理j4-make-config配色*************************************

# 交互式选择  archlinux, base16-tomorrow, bear2, *goole, greenish, grvbox,   okraits, *seti,
# ,*solarized_dark,  *solarized_light, *solarized_mod, *tango-jungle, tomorrow-night-80s,*ubntu
# $  ./j4-make-config -i

# class                 border  backgr. text    indicator
client.focused          #859900 #859900 #fdf6e3 #2e9ef4
client.focused_inactive #268bd2 #268bd2 #fdf6e3 #484e50
client.unfocused        #333333 #93a1a1 #fdf6e3 #292d2e
#client.urgent not defined yet



